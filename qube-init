#!/usr/bin/env ruby

require "yaml"
require "erb"

# setup the config file to use to generate the quorum resources and kubernetes API resources.
@CONFIG_FILE = "qubernetes.yaml"
@OPTIONAL_CONFIG_FILE=ARGV[0]
ARGV.clear

if @OPTIONAL_CONFIG_FILE != nil
  @CONFIG_FILE = @OPTIONAL_CONFIG_FILE
end
puts "using config file: " + @CONFIG_FILE

@config                = YAML.load_file(@CONFIG_FILE)

# Generate deployments in a single file, or in separate files.
@sep_deployment_files=false
if @config["sep_deployment_files"] != nil
  @sep_deployment_files = @config["sep_deployment_files"]
end

if File.directory?("out") && !@config["skip_out_directory"]
  puts("\n The 'out' directory already exist.")
  puts(" Please select the action you wish to take:")
  puts("")
  puts(" [1] Delete the 'out' directory and generate new resources.")
  puts(" [2] Update / add nodes that don't already exist.")
  puts(" [3] Cancel.")
  res = gets
  res = res.strip
  case res
  when "1"
    puts("Creating all new resources.")
    `rm -r out`
  when "2"
    puts("Generating additional resources only.")
  when "3"
    puts("OK, bye :)")
    exit(0)
  else
    puts("OK, not doing anything :)")
    exit(0)
  end
end

`
./quorum-init #{@CONFIG_FILE}
`

puts  "  Running ./qubernetes to generate Kubernetes resources."
puts ""
`
./qubernetes #{@CONFIG_FILE}
`
@Kubectl_Cmd="  $> kubectl apply -f out"
if @sep_deployment_files
  @Kubectl_Cmd="  $> kubectl apply -f out -f out/deployments"
end
puts("  To deploy to kubernetes run:")
puts(@Kubectl_Cmd)
